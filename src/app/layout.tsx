// NEXTJS IMPORTS
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { cookies } from "next/headers";

// STYLES
import "./globals.css";

// LIBRARIES
import { NextIntlClientProvider } from 'next-intl';
import { getLocale, getMessages } from 'next-intl/server';

// PROVIDERS
import { ThemeProvider } from "@/providers/theme-provider";
import { ReactQueryClientProvider } from "@/providers/react-query-client-provider";

// COMPONENTS
import { Toaster } from "@/components/ui/sonner";
import { HeaderProtected } from "@/components/ui/header/header_protected";

// ACTIONS
import { server_fetchUserData } from "@/actions/functions/data/server/server_fetchUserData";

// TYPES
import type { typesUser } from "@/types/typesUser";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const locale = await getLocale();
  const messages = await getMessages();

  const cookieStore = await cookies();
  const authToken = cookieStore.get('auth_token')?.value as string | undefined;

  const result = await server_fetchUserData();
  const userData: typesUser | undefined = result.success ? result.data as typesUser : undefined;

  return (
    <ReactQueryClientProvider>
      <html lang={locale}>
        <body className={inter.className}>
          <NextIntlClientProvider messages={messages}>
            <ThemeProvider
              attribute="class"
              defaultTheme="dark"
              enableSystem
              disableTransitionOnChange
            >
              {authToken && userData && (
                <HeaderProtected serverUserData={userData} authToken={authToken} />
              )}

              {children}

              <Toaster />
            </ThemeProvider>
          </NextIntlClientProvider>
        </body>
      </html>
    </ReactQueryClientProvider>
  );
}